// <auto-generated />
using System;
using LeaveManagement.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LeaveManagement.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200726144012_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LeaveManagement.DataAccess.DataModel.ApplicationRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ApproverComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApproverId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RequestType")
                        .HasColumnType("int");

                    b.Property<string>("RequesterComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequesterId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ApplicationRequest");
                });

            modelBuilder.Entity("LeaveManagement.DataAccess.DataModel.Employee", b =>
                {
                    b.Property<string>("EmployeeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateOfJoining")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManagerId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("EmployeeId");

                    b.HasIndex("ManagerId");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("LeaveManagement.DataAccess.DataModel.EmployeeLeaveBalance", b =>
                {
                    b.Property<string>("EmployeeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("LeaveType")
                        .HasColumnType("int");

                    b.Property<float>("NoOfDays")
                        .HasColumnType("real");

                    b.HasKey("EmployeeId", "LeaveType");

                    b.ToTable("EmployeeLeaveBalance");
                });

            modelBuilder.Entity("LeaveManagement.DataAccess.DataModel.LeaveType", b =>
                {
                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("NoOfDays")
                        .HasColumnType("int");

                    b.HasKey("Type");

                    b.ToTable("LeaveType");
                });

            modelBuilder.Entity("LeaveManagement.DataAccess.DataModel.Employee", b =>
                {
                    b.HasOne("LeaveManagement.DataAccess.DataModel.Employee", "Manager")
                        .WithMany()
                        .HasForeignKey("ManagerId");
                });

            modelBuilder.Entity("LeaveManagement.DataAccess.DataModel.EmployeeLeaveBalance", b =>
                {
                    b.HasOne("LeaveManagement.DataAccess.DataModel.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
